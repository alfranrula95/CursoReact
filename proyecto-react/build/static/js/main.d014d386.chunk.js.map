{"version":3,"sources":["pages/Registro.jsx","context/context.js","pages/LoginPage.jsx","redux/actions/index.js","components/Producto.jsx","components/Catalogo.jsx","pages/Store.jsx","components/LinkPropio.jsx","components/SesionHeader.jsx","pages/DetallesProducto.jsx","pages/About.jsx","context/reducers.js","components/BarraOpciones.jsx","App.js","reportWebVitals.js","redux/reducers/index.js","services/http.service.jsx","sagas/index.js","redux/index.js","serviceWorkerRegistration.js","index.js"],"names":["RegistroPage","useState","username","setUser","pass","setPass","error","setError","error1","setError1","history","useHistory","className","type","name","onChange","event","target","value","onClick","window","localStorage","getItem","length","setItem","push","initialState","logged","login","logout","createContext","LoginPage","contexter","useContext","context","ACTIONS_PRODUCTOS","selectarProducto","index","payload","setearLista","productos","console","log","ACTIONS_SESION","Producto","props","selectear","useCallback","id","select","useEffect","item","title","src","image","alt","memo","Catalogo","map","prod","StoreComponent","dispatch","useDispatch","lista","setLista","store","useSelector","state","useMemo","listaProductos","selectProducto","idProd","LinkPropio","href","children","preventDefault","pushState","SesionHeader","DetallesProducto","idSel","selected","productoSel","description","price","About","mensaje","location","LOGIN","LOGOUT","initialStateLogger","reducerLogger","action","BarraOpciones","esDeDia","setDia","toggleModo","cards","document","getElementsByTagName","style","backgroundColor","color","getElementsByClassName","i","border","texto","icon","faMoon","faSun","App","useReducer","logger","Provider","exact","path","component","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","iniciado","axios","_axios","create","baseURL","responseType","interceptors","request","use","config","Promise","reject","response","status","GETAllProductos","a","get","data","GETProducto","rootSaga","productSaga","selectSaga","loadProducts","cargaProd","all","fork","takeLatest","call","listaProducts","put","number","sagaMiddleware","createSagaMiddleware","devTools","__REDUX_DEVTOOLS_EXTENSION__","createStore","compose","applyMiddleware","run","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.d014d386.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport './Login.scss';\r\n\r\nexport default function RegistroPage() {\r\n    const [username, setUser] = useState('');\r\n    const [pass, setPass] = useState('');\r\n    const [error, setError] = useState(false);\r\n    const [error1, setError1] = useState(false);\r\n    const history = useHistory();\r\n\r\n    let handleUser = (event) => {\r\n        setError(false);\r\n        setError1(false);\r\n        setUser(event.target.value);\r\n    };\r\n\r\n    let handlePass = (event) => {\r\n        setError(false);\r\n        setError1(false);\r\n        setPass(event.target.value);\r\n    };\r\n\r\n    let submit = (event) => {\r\n\r\n        if (!window.localStorage.getItem(username)) {\r\n            setError1(false);\r\n            if (pass.length < 5) {\r\n                setError(true);\r\n            } else {\r\n                setError(false);\r\n                window.localStorage.setItem(username, pass);\r\n                history.push(\"/\");\r\n            }\r\n        } else {\r\n            setError1(true);\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"row col-md-12 justify-content-center\">\r\n            <div className=\"col-md-6 card\">\r\n                <h1>Registro</h1>\r\n                <div className=\"col-md-12\">\r\n                    <label className=\"form-label\">Username</label>\r\n                    <input type=\"text\" name=\"username\" className=\"form-control\" onChange={handleUser}></input>\r\n                    <label className=\"form-label\">Password</label>\r\n                    <input type=\"password\" name=\"password\" className=\"form-control\" onChange={handlePass}></input>\r\n                </div>\r\n                <div className=\"col-md-12 justify-content-center\">\r\n                    <button className=\"btn btn-primary botones\" onClick={submit} type=\"submit\"  >Registrar</button>\r\n                </div>\r\n                {error && <p>La contraseña ha de tener minimo 5 caracteres</p>}\r\n                {error1 && <p>El username introducido ya existe</p>}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { createContext } from 'react';\r\n\r\n// Estado inicial de la aplicación.\r\nconst initialState = {\r\n  logged: false,\r\n  login: () => {},\r\n  logout: () => {}\r\n}\r\n\r\nexport default createContext(initialState)","import { useContext, useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport context from '../context/context';\r\nimport './Login.scss';\r\n\r\nexport default function LoginPage() {\r\n    const [username, setUser] = useState('');\r\n    const [pass, setPass] = useState('');\r\n    const [error, setError] = useState(false);\r\n    const history = useHistory();\r\n    //const dispatcher = useDispatch();\r\n    const contexter = useContext(context);\r\n    //const [logger, dispatch] = useReducer(reducerLogger, initialStateLogger);\r\n\r\n    let submit = (event) => {\r\n\r\n        if (window.localStorage.getItem(username)) {\r\n            const auxPass = window.localStorage.getItem(username);\r\n            if (auxPass === pass) {\r\n                setError(false);\r\n                // dispatcher(inciarSesion());\r\n                contexter.login();\r\n                \r\n                history.push(\"/store\");\r\n            } else {\r\n                setError(true);\r\n            }\r\n        } else {\r\n            setError(true);\r\n        }\r\n\r\n    }\r\n\r\n    let gotoRegister = (event) => {\r\n        setError(false);\r\n        history.push(\"/registro\");\r\n    }\r\n\r\n    let handleUser = (event) => {\r\n        setError(false);\r\n        setUser(event.target.value);\r\n    };\r\n\r\n    let handlePass = (event) => {\r\n        setError(false);\r\n        setPass(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"row col-md-12 justify-content-center\">\r\n        <div className=\"col-md-6 card\">\r\n            <h1>Log in</h1>\r\n            <div className=\"col-md-12\">\r\n                <label className=\"form-label\">Username</label>\r\n                <input type=\"text\"  className=\"form-control\" name=\"username\" onChange={handleUser}></input>\r\n                <label className=\"form-label\">Password</label>\r\n                <input type=\"password\"  className=\"form-control\" name=\"password\" onChange={handlePass}></input>\r\n            </div>\r\n            <div className=\"col-md-12 justify-content-center\">\r\n                <button className=\"btn btn-primary botones\" onClick={submit} type=\"submit\"  >Log in</button>\r\n                <button className=\"btn btn-secondary botones\" onClick={gotoRegister} >Registrate</button>\r\n            </div>\r\n            {error && <p>Credenciales incorrectas</p>}\r\n        </div>\r\n        </div>\r\n    );\r\n}","/* Fichero redux/actions/index.js */\r\n\r\nexport const ACTIONS_PRODUCTOS = {\r\n    GETTEAR: \"GET_PRODUCTOS\",\r\n    SELECCIONAR: \"VER_PRODUCTO\",\r\n    LOAD_PRODUCTS: 'LOAD_PRODUCTS',\r\n    CARGAR_UNO : 'LOAD_ONE',\r\n    SEL_PROD : 'SEL_PROD'\r\n}\r\n\r\n\t\r\nexport const loadProducts = () => {\r\n    return {\r\n        type: ACTIONS_PRODUCTOS.LOAD_PRODUCTS\r\n    }\r\n}\r\n\r\nexport const selProd = (prod) => {\r\n    console.log('selprod - > ' + prod);\r\n    return {\r\n        type: ACTIONS_PRODUCTOS.SEL_PROD,\r\n        payload: prod\r\n    }\r\n}\r\n\r\nexport const loadOneProduct = (index) => {\r\n    return {\r\n        type: ACTIONS_PRODUCTOS.CARGAR_UNO,\r\n        payload: index\r\n    }\r\n}\r\n\r\nexport const selectarProducto = (index) => {\r\n    return {\r\n        type: ACTIONS_PRODUCTOS.SELECCIONAR,\r\n        payload: index\r\n    }\r\n}\r\n\r\nexport const setearLista = (productos) => {\r\n    console.log('setearLista');\r\n    console.log(productos);\r\n    return {\r\n        type: ACTIONS_PRODUCTOS.GETTEAR,\r\n        payload: productos\r\n    }\r\n}\r\n\r\nexport const ACTIONS_SESION = {\r\n    LOGIN: \"LOGIN\",\r\n    LOGOUT: \"LOGOUT\"\r\n}\r\n\r\nexport const inciarSesion = () => {\r\n    console.log('logging');\r\n    return {\r\n        type: ACTIONS_SESION.LOGIN,\r\n    }\r\n}\r\n\r\nexport const cerrarSesion = () => {\r\n    return {\r\n        type: ACTIONS_SESION.LOGOUT,\r\n    }\r\n}","import { memo, useCallback, useEffect } from 'react';\r\nimport '../pages/Store.scss';\r\n\r\nfunction Producto(props) {\r\n\r\n    const selectear = useCallback((id) => {\r\n        props.select(id);\r\n    }, [props])\r\n\r\n    useEffect(() => {\r\n        console.log(\"render Producto\");\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"col-md-3 card product \" onClick={() => selectear(props.item.id)}>\r\n            <h4>{props.item.title}</h4>\r\n            <br></br>\r\n            <img src={props.item.image} alt=\"imagen\"></img>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default memo(Producto);","import { memo, useCallback, useEffect } from 'react';\r\nimport '../pages/Store.scss';\r\nimport Producto from './Producto';\r\n\r\n/**\r\n * Este componente Catalogo tiene la funcionalidad de mostrar todos los productos que recibe como props,\r\n * haciendo cada uno de ellos una instáncia de otro componente hijo (Producto).\r\n * @param props Los props que recibe este componente són:\r\n *  el listado de productos y la acción a realizar en seleccionar uno.\r\n * @returns El listado con todos los productos mapeado de manera que por cada uno de ellos,\r\n * haya una instáncia diferente de Producto, al que se le pasaran por props, el objeto de producto correspondiente,\r\n * así como la acción a realizar en seleccionarlo.\r\n */\r\nfunction Catalogo(props) {\r\n\r\n    const selectear = useCallback((id) => {\r\n        props.select(id);\r\n    }, [props])\r\n\r\n    useEffect(() => {\r\n        console.log(\"render Catalogo\");\r\n    }, []);\r\n\r\n    return (\r\n        < div className=\"row col-md-12 muestrario\" >\r\n            { props.productos.length > 0 &&\r\n                props.productos.map((prod, index) => {\r\n                    return (\r\n                        <Producto item={prod} key={index} select={selectear} />\r\n                    );\r\n                })\r\n            }\r\n            { props.productos.length === 0 && <h1>Cargando productos...</h1>}\r\n        </div>\r\n    );\r\n}\r\n\r\n/*\r\n\r\nreturn (\r\n    <div key={index} className=\"col-md-3 card product \" onClick={() => selectear(prod.id)}>\r\n        <h4>{prod.title}</h4>\r\n        <br></br>\r\n        <img src={prod.image}></img>\r\n    </div>\r\n);\r\n\r\n*/\r\n\r\nexport default memo(Catalogo);","import { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport './Store.scss';\r\nimport { selectarProducto, loadProducts } from '../redux/actions';\r\nimport { useHistory } from \"react-router\";\r\nimport Catalgo from \"../components/Catalogo\";\r\n\r\n/**\r\n * Componente que actúa como página principal de la tienda. \r\n * En este componente se obtendrán los productos a mostrar, que una vez obtenidos, se pasarán\r\n * a un componente hijo.\r\n * @returns El componente hijo Catalogo al que le pasa los props necesarios\r\n */\r\nfunction StoreComponent() {\r\n    const dispatch = useDispatch();\r\n    const [lista, setLista] = useState([]);\r\n    const store = useSelector(state => state);\r\n    const history = useHistory();\r\n\r\n    /*\r\n    const getProductos = () => {\r\n        return GETAllProductos().then(data => {\r\n            setLista(data);\r\n            console.log('getter');\r\n            console.log(data);\r\n        });\r\n    }*/\r\n\r\n    useMemo(() => {\r\n        console.log('usememo');\r\n        setLista(store.listaProductos);\r\n    }, [store.listaProductos])\r\n\r\n    useEffect(() => {\r\n        console.log(\"render Store\");\r\n        if (store.listaProductos.length === 0) {\r\n            //getProductos();\r\n            console.log('getteando');\r\n            dispatch(loadProducts());\r\n            //setLista(store.listaProductos);\r\n        } else {\r\n            //setLista(store.listaProductos);\r\n        }\r\n    }, [])\r\n\r\n    const selectProducto = useCallback((idProd) => {\r\n        dispatch(selectarProducto(idProd));\r\n        history.push(\"/product\", { id: 1 });\r\n    }, [])\r\n\r\n    return (\r\n\r\n        <Catalgo productos={lista} select={selectProducto} />\r\n    );\r\n\r\n}\r\n\r\nexport default StoreComponent;\r\n","import { useHistory } from \"react-router\";\r\n\r\nexport const LinkPropio = ({ className, href, children }) => {\r\n    const history = useHistory();\r\n\r\n    // Evitamos que la página se actualize y así no perder el estado.\r\n    const onClick = (event) => {\r\n        event.preventDefault();\r\n        console.log('linkpropio clickado');\r\n        window.history.pushState({ }, \"\", href);\r\n        history.push(href, { });\r\n\r\n    };\r\n\r\n    return (\r\n        <a className={className} href={href} onClick={onClick}>\r\n            {children}\r\n        </a>\r\n    );\r\n};","import './SesionHeader.scss';\r\nimport { useContext } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { selectarProducto, setearLista } from '../redux/actions';\r\nimport { useHistory } from \"react-router\";\r\nimport { LinkPropio } from './LinkPropio';\r\nimport context from '../context/context';\r\n\r\nexport default function SesionHeader(props) {\r\n   // let toggler = useSelector((state) => state.iniciado);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const contexter = useContext(context);\r\n\r\n    let cierra = (event) => {\r\n        console.log('cerrando');\r\n        dispatch(setearLista([]));\r\n        dispatch(selectarProducto(null));\r\n        //dispatch(cerrarSesion());\r\n        contexter.logout()\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <div className=\"row col-md-12\">\r\n            <ul className=\"nav\">\r\n                <li className=\"nav-item\">\r\n                    <LinkPropio href='/about' className=\"nav-link\"  >\r\n                        Navegar al About\r\n                    </LinkPropio>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <LinkPropio href='/store' className=\"nav-link\">\r\n                        Store\r\n                    </LinkPropio>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <button onClick={cierra} className=\"btn btn-outline-danger\">Log out</button>\r\n                </li>\r\n            </ul>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { loadOneProduct } from \"../redux/actions\";\r\nimport './Store.scss';\r\n\r\nfunction DetallesProducto(props) {\r\n    const dispatch = useDispatch();\r\n    const idSel = useSelector(state => state);\r\n    //const [prod, setProd] = useState(null);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        console.log(idSel.selected);\r\n        if (idSel.selected) {\r\n            /*return GETProducto(idSel.selected).then(data => {\r\n                setProd(data);\r\n            });*/\r\n            dispatch(loadOneProduct(idSel.selected));\r\n        } else {\r\n            history.push(\"/store\");\r\n        }\r\n    }, [dispatch])\r\n\r\n    return ( \r\n        <div className=\"row col-md-12 justify-content-center\">\r\n            {idSel.productoSel &&\r\n                <div className=\"col-md-8 detalles card\">\r\n                    <h1>{idSel.productoSel.title}</h1>\r\n                    <br></br>\r\n                    <img src={idSel.productoSel.image} alt=\"imagen\"></img>\r\n                    <p>{idSel.productoSel.description}</p>\r\n                    <p>{idSel.productoSel.price}$</p>\r\n                </div>}\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default DetallesProducto;","import { useHistory } from \"react-router\";\r\n\r\nexport default function About() {\r\n    const history = useHistory();\r\n    return (\r\n        <div >\r\n            <h1>Pagina About</h1>\r\n            <p>{window.history.state.mensaje}</p>\r\n            <p>{history.location.state.mensaje}</p>\r\n        </div>\r\n    );\r\n}","/** Fichero context/reducers.js */\r\nexport const LOGIN = 'LOGIN';\r\nexport const LOGOUT = 'LOGOUT';\r\n\r\nexport const initialStateLogger = {\r\n    logged: false\r\n};\r\n\r\nexport const reducerLogger = (state, action) => {\r\n  switch (action.type) {\r\n    case LOGIN: return {...initialStateLogger, logged: true};\r\n    case LOGOUT: return {...initialStateLogger, logged: false};\r\n    default: return state;\r\n  }\r\n};","import { faMoon, faSun } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useState } from \"react\";\r\nimport './BarraOpciones.scss';\r\n\r\nexport default function BarraOpciones() {\r\n    const [esDeDia, setDia] = useState(true);\r\n\r\n    const toggleModo = () => {\r\n        let cards;\r\n        if (esDeDia) {\r\n            document.getElementsByTagName(\"body\")[0].style.backgroundColor = '#282c34';\r\n            document.getElementsByTagName(\"body\")[0].style.color = '#ffffff';\r\n            cards = document.getElementsByClassName('card');\r\n            for (let i = 0; i < cards.length; i++) {\r\n                cards[i].style.border = '1px solid #ffffff';\r\n            }\r\n            setDia(!esDeDia);\r\n        } else {\r\n            document.getElementsByTagName(\"body\")[0].style.backgroundColor = '#ffffff';\r\n            document.getElementsByTagName(\"body\")[0].style.color = '#282c34';\r\n            cards = document.getElementsByClassName('card');\r\n            for (let i = 0; i < cards.length; i++) {\r\n                cards[i].style.border = '1px solid rgba(0,0,0,.125)';\r\n            }\r\n            setDia(!esDeDia);\r\n        }\r\n    }\r\n\r\n    let texto = esDeDia ?\r\n        (<div><FontAwesomeIcon icon={faMoon} /></div>) :\r\n        (<div><FontAwesomeIcon icon={faSun} /></div>);\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"row col-md-12 justify-content-end\" >\r\n\r\n            {!esDeDia && <button className=\"btn btn-light toggler\" onClick={toggleModo}>\r\n                {texto}\r\n            </button>}\r\n            {esDeDia && <button className=\"btn btn-dark toggler\" onClick={toggleModo}>\r\n                {texto}\r\n            </button>}\r\n        </div>\r\n    );\r\n}","import './App.scss';\nimport { BrowserRouter as Router, Redirect, Route } from 'react-router-dom';\nimport RegistroPage from './pages/Registro';\nimport LoginPage from './pages/LoginPage';\nimport StoreComponent from './pages/Store';\nimport SessionHeader from './components/SesionHeader';\nimport DetallesProducto from './pages/DetallesProducto';\nimport About from './pages/About';\nimport context from './context/context';\nimport { useEffect, useReducer } from 'react';\nimport { initialStateLogger, LOGIN, LOGOUT, reducerLogger } from './context/reducers';\nimport BarraOpciones from './components/BarraOpciones';\n\nfunction App() {\n\n  //let toggler = useSelector(state => state.iniciado);\n  //const [logger, setLogger] = useState(false);\n\n  let logout = () => {\n    dispatch({ type: LOGOUT });\n  };\n\n  let login = () => {\n    dispatch({ type: LOGIN });\n  };\n\n  const [logger, dispatch] = useReducer(reducerLogger, initialStateLogger);\n\n  useEffect(() => {\n    console.log(\"render APP\");\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-body\">\n        <BarraOpciones />\n        <div className=\"container\">\n          <context.Provider className=\"App\" value={{\n            logged: logger.logged,\n            login: login,\n            logout: logout\n          }}>\n            <Router>\n              {logger.logged && <SessionHeader />}\n              <Route exact path=\"/\" component={LoginPage} />\n              <Route exact path=\"/about\">\n                {logger.logged ? <About /> : <Redirect to='/' />}\n              </Route>\n              <Route exact path=\"/registro\" component={RegistroPage} />\n              <Route path=\"/store\">\n                {logger.logged ? <StoreComponent /> : <Redirect to='/' />}\n              </Route>\n              <Route path=\"/product\">\n                {logger.logged ? <DetallesProducto /> : <Redirect to='/' />}\n              </Route>\n            </Router>\n          </context.Provider>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/* Fichero redux/reducers/index.js */\r\n\r\nimport { ACTIONS_PRODUCTOS } from '../actions';\r\n\r\nimport { ACTIONS_SESION } from \"../actions\";\r\n\r\nconst initialState = {\r\n  listaProductos: [],\r\n  selected: null,\r\n  iniciado: false,\r\n  productoSel: null,\r\n};\r\n\r\nexport const productos = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ACTIONS_PRODUCTOS.GETTEAR:\r\n      state.listaProductos = action.payload;\r\n      return {...state}\r\n    case ACTIONS_PRODUCTOS.SELECCIONAR:\r\n      state.selected = action.payload;\r\n      return {...state}\r\n    case ACTIONS_PRODUCTOS.CARGAR_UNO:\r\n      state.productoSel = action.payload;\r\n      return {...state}\r\n      case ACTIONS_PRODUCTOS.SEL_PROD:\r\n        state.productoSel = action.payload;\r\n        return {...state}\r\n    case ACTIONS_SESION.LOGIN:\r\n      state.iniciado = true;\r\n      return {...state}\r\n    case ACTIONS_SESION.LOGOUT:\r\n      state.iniciado = false;\r\n      return {...state}\r\n    default:\r\n      return {...state}\r\n  }\r\n}\r\n\r\n\r\n\r\nconst initialSesionState = {\r\n  sesionControl: false,\r\n};\r\n\r\nexport const controlSesion = (state = initialSesionState.sesionControl, action) => {\r\n  switch (action.type) {\r\n    case ACTIONS_SESION.LOGIN:\r\n      state = true;\r\n      return state;\r\n    case ACTIONS_SESION.LOGOUT:\r\n      state = false;\r\n      return state;\r\n    default:\r\n      return false;\r\n  }\r\n}","import _axios from \"axios\";\r\n\r\nconst axios = _axios.create({\r\n    baseURL: \"https://fakestoreapi.com/products\",\r\n    responseType: \"json\"\r\n});\r\n\r\n// Incluimos un interceptor para las peticiones\r\naxios.interceptors.request.use(config => {\r\n    console.log(\r\n        \"He lanzado una petición con la siguiente configuración: \",\r\n        config\r\n    );\r\n\r\n    return config;\r\n}, error => {\r\n    return Promise.reject(error);\r\n});\r\n\r\naxios.interceptors.response.use(response => {\r\n    console.log(\r\n        \"He lanzado una petición con la siguiente configuración: \",\r\n        response\r\n    );\r\n\r\n    const status = response.status;\r\n    if (status < 200 || status >= 300) {\r\n        return Promise.reject(`Response status: ${status}`);\r\n    } else {\r\n        return response;\r\n    }\r\n}, error => {\r\n    return Promise.reject(error);\r\n});\r\n\r\nconst GETAllProductos = async () => {\r\n    return axios.get().then(response => response.data);\r\n}\r\n\r\nconst GETProducto = async (id) => {\r\n    return axios.get(\"/\" + id).then(response => response.data);\r\n}\r\n\r\nexport { GETAllProductos, GETProducto };","import { fork, call, put, takeLatest, all } from \"@redux-saga/core/effects\"\r\nimport { ACTIONS_PRODUCTOS, selProd, setearLista } from \"../redux/actions\";\r\nimport { GETAllProductos, GETProducto } from \"../services/http.service\";\r\n\r\nexport function* rootSaga() {\r\n    yield all([\r\n        fork(productSaga),\r\n        fork(selectSaga),\r\n    ]);\r\n\r\n\r\n}\r\n\r\n// El saga quedará a la escucha de la ultima acción ejecutada\r\n// del tipo LOAD_PROODUCTS, gracias al método takeLatest, y ejecutará\r\n// la función indicada como segundo argumento cuando detecte esa acción.\r\nfunction* productSaga() {\r\n    yield takeLatest(ACTIONS_PRODUCTOS.LOAD_PRODUCTS, loadProducts);\r\n}\r\n\r\nfunction* selectSaga() {\r\n    yield takeLatest(ACTIONS_PRODUCTOS.CARGAR_UNO, cargaProd);\r\n}\r\n\r\n// También como generadora, esta función obtendrá el listado de productos\r\n// utilizando axios, y luego lanzará una nueva acción para actualizar el\r\n// listado, en lugar de con dispatch, utilizando el método propio put.\r\nfunction* loadProducts() {\r\n    const listaProducts = yield call(() => GETAllProductos());\r\n    yield put(setearLista(listaProducts));\r\n}\r\n\r\nfunction* cargaProd(index) {\r\n    const number = index.payload;\r\n    const productoSel = yield call(() => GETProducto(number));\r\n    yield put(selProd(productoSel));\r\n}","/* Fichero redux/index.js */\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { productos } from './reducers';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { rootSaga } from '../sagas';\r\n\r\n\r\n// Crearemos un saga\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\n// STORE - El estado global de la aplicación.\r\n\r\nconst devTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n//const composeEnhancers = devTools || compose;\r\nlet store = createStore(\r\n  //rootReducer,\r\n  productos,\r\n  /* SIN REDUX - DEVTOOLS */\r\n  /*composeEnhancers(\r\n    applyMiddleware(sagaMiddleware),\r\n  )*/\r\n  /* CON REDUX - DEVTOOLS */\r\n  compose( \r\n    applyMiddleware(sagaMiddleware),\r\n    devTools\r\n  )\r\n);\r\n\r\n\t\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './index.scss';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nserviceWorkerRegistration.register();"],"sourceRoot":""}